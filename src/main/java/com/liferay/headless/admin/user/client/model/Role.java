/*
 * Headless Admin User
 * A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.user.client', and version '4.0.49'.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.liferay.headless.admin.user.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.liferay.headless.admin.user.client.model.Creator;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
/**
 * Role
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-04T10:04:24.474623+08:00[Asia/Shanghai]")

public class Role {
  @SerializedName("actions")
  private Map<String, Map<String, String>> actions = null;

  @SerializedName("availableLanguages")
  private List<String> availableLanguages = null;

  @SerializedName("creator")
  private Creator creator = null;

  @SerializedName("dateCreated")
  private OffsetDateTime dateCreated = null;

  @SerializedName("dateModified")
  private OffsetDateTime dateModified = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("description_i18n")
  private Map<String, String> descriptionI18n = null;

  @SerializedName("externalReferenceCode")
  private String externalReferenceCode = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("name_i18n")
  private Map<String, String> nameI18n = null;

  @SerializedName("roleType")
  private String roleType = null;

  @SerializedName("x-class-name")
  private String xClassName = "com.liferay.headless.admin.user.dto.v1_0.Role";

   /**
   * Block of actions that the user can perform with the roles.
   * @return actions
  **/
  @Schema(description = "Block of actions that the user can perform with the roles.")
  public Map<String, Map<String, String>> getActions() {
    return actions;
  }

   /**
   * A list of languages for which the role has a translation.
   * @return availableLanguages
  **/
  @Schema(description = "A list of languages for which the role has a translation.")
  public List<String> getAvailableLanguages() {
    return availableLanguages;
  }

  public Role creator(Creator creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @Schema(description = "")
  public Creator getCreator() {
    return creator;
  }

  public void setCreator(Creator creator) {
    this.creator = creator;
  }

   /**
   * The role&#x27;s creation date.
   * @return dateCreated
  **/
  @Schema(description = "The role's creation date.")
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

   /**
   * The last time any of the role&#x27;s fields were changed.
   * @return dateModified
  **/
  @Schema(description = "The last time any of the role's fields were changed.")
  public OffsetDateTime getDateModified() {
    return dateModified;
  }

   /**
   * The role&#x27;s description.
   * @return description
  **/
  @Schema(description = "The role's description.")
  public String getDescription() {
    return description;
  }

   /**
   * Get descriptionI18n
   * @return descriptionI18n
  **/
  @Schema(description = "")
  public Map<String, String> getDescriptionI18n() {
    return descriptionI18n;
  }

  public Role externalReferenceCode(String externalReferenceCode) {
    this.externalReferenceCode = externalReferenceCode;
    return this;
  }

   /**
   * The portable ID of this role.
   * @return externalReferenceCode
  **/
  @Schema(description = "The portable ID of this role.")
  public String getExternalReferenceCode() {
    return externalReferenceCode;
  }

  public void setExternalReferenceCode(String externalReferenceCode) {
    this.externalReferenceCode = externalReferenceCode;
  }

   /**
   * The role&#x27;s ID.
   * @return id
  **/
  @Schema(description = "The role's ID.")
  public Long getId() {
    return id;
  }

   /**
   * The role&#x27;s name.
   * @return name
  **/
  @Schema(description = "The role's name.")
  public String getName() {
    return name;
  }

   /**
   * Get nameI18n
   * @return nameI18n
  **/
  @Schema(description = "")
  public Map<String, String> getNameI18n() {
    return nameI18n;
  }

   /**
   * The role&#x27;s type.
   * @return roleType
  **/
  @Schema(description = "The role's type.")
  public String getRoleType() {
    return roleType;
  }

   /**
   * Get xClassName
   * @return xClassName
  **/
  @Schema(description = "")
  public String getXClassName() {
    return xClassName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Role role = (Role) o;
    return Objects.equals(this.actions, role.actions) &&
        Objects.equals(this.availableLanguages, role.availableLanguages) &&
        Objects.equals(this.creator, role.creator) &&
        Objects.equals(this.dateCreated, role.dateCreated) &&
        Objects.equals(this.dateModified, role.dateModified) &&
        Objects.equals(this.description, role.description) &&
        Objects.equals(this.descriptionI18n, role.descriptionI18n) &&
        Objects.equals(this.externalReferenceCode, role.externalReferenceCode) &&
        Objects.equals(this.id, role.id) &&
        Objects.equals(this.name, role.name) &&
        Objects.equals(this.nameI18n, role.nameI18n) &&
        Objects.equals(this.roleType, role.roleType) &&
        Objects.equals(this.xClassName, role.xClassName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actions, availableLanguages, creator, dateCreated, dateModified, description, descriptionI18n, externalReferenceCode, id, name, nameI18n, roleType, xClassName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Role {\n");
    
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    availableLanguages: ").append(toIndentedString(availableLanguages)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionI18n: ").append(toIndentedString(descriptionI18n)).append("\n");
    sb.append("    externalReferenceCode: ").append(toIndentedString(externalReferenceCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameI18n: ").append(toIndentedString(nameI18n)).append("\n");
    sb.append("    roleType: ").append(toIndentedString(roleType)).append("\n");
    sb.append("    xClassName: ").append(toIndentedString(xClassName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
