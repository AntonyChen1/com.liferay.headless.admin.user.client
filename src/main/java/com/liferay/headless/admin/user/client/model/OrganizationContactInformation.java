/*
 * Headless Admin User
 * A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.user.client', and version '4.0.49'.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.liferay.headless.admin.user.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.liferay.headless.admin.user.client.model.EmailAddress;
import com.liferay.headless.admin.user.client.model.Phone;
import com.liferay.headless.admin.user.client.model.PostalAddress;
import com.liferay.headless.admin.user.client.model.WebUrl;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The organization&#x27;s contact information, which includes email addresses, postal addresses, phone numbers, and web URLs. This is modeled internally as a &#x60;Contact&#x60;.
 */
@Schema(description = "The organization's contact information, which includes email addresses, postal addresses, phone numbers, and web URLs. This is modeled internally as a `Contact`.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-04T10:04:24.474623+08:00[Asia/Shanghai]")

public class OrganizationContactInformation {
  @SerializedName("emailAddresses")
  private List<EmailAddress> emailAddresses = null;

  @SerializedName("postalAddresses")
  private List<PostalAddress> postalAddresses = null;

  @SerializedName("telephones")
  private List<Phone> telephones = null;

  @SerializedName("webUrls")
  private List<WebUrl> webUrls = null;

  @SerializedName("x-class-name")
  private String xClassName = "com.liferay.headless.admin.user.dto.v1_0.OrganizationContactInformation";

  public OrganizationContactInformation emailAddresses(List<EmailAddress> emailAddresses) {
    this.emailAddresses = emailAddresses;
    return this;
  }

  public OrganizationContactInformation addEmailAddressesItem(EmailAddress emailAddressesItem) {
    if (this.emailAddresses == null) {
      this.emailAddresses = new ArrayList<EmailAddress>();
    }
    this.emailAddresses.add(emailAddressesItem);
    return this;
  }

   /**
   * The organization&#x27;s email addresses, with one optionally marked as primary.
   * @return emailAddresses
  **/
  @Schema(description = "The organization's email addresses, with one optionally marked as primary.")
  public List<EmailAddress> getEmailAddresses() {
    return emailAddresses;
  }

  public void setEmailAddresses(List<EmailAddress> emailAddresses) {
    this.emailAddresses = emailAddresses;
  }

  public OrganizationContactInformation postalAddresses(List<PostalAddress> postalAddresses) {
    this.postalAddresses = postalAddresses;
    return this;
  }

  public OrganizationContactInformation addPostalAddressesItem(PostalAddress postalAddressesItem) {
    if (this.postalAddresses == null) {
      this.postalAddresses = new ArrayList<PostalAddress>();
    }
    this.postalAddresses.add(postalAddressesItem);
    return this;
  }

   /**
   * The organization&#x27;s postal addresses, with one optionally marked as primary.
   * @return postalAddresses
  **/
  @Schema(description = "The organization's postal addresses, with one optionally marked as primary.")
  public List<PostalAddress> getPostalAddresses() {
    return postalAddresses;
  }

  public void setPostalAddresses(List<PostalAddress> postalAddresses) {
    this.postalAddresses = postalAddresses;
  }

  public OrganizationContactInformation telephones(List<Phone> telephones) {
    this.telephones = telephones;
    return this;
  }

  public OrganizationContactInformation addTelephonesItem(Phone telephonesItem) {
    if (this.telephones == null) {
      this.telephones = new ArrayList<Phone>();
    }
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * The organization&#x27;s phones numbers, with one optionally marked as primary.
   * @return telephones
  **/
  @Schema(description = "The organization's phones numbers, with one optionally marked as primary.")
  public List<Phone> getTelephones() {
    return telephones;
  }

  public void setTelephones(List<Phone> telephones) {
    this.telephones = telephones;
  }

  public OrganizationContactInformation webUrls(List<WebUrl> webUrls) {
    this.webUrls = webUrls;
    return this;
  }

  public OrganizationContactInformation addWebUrlsItem(WebUrl webUrlsItem) {
    if (this.webUrls == null) {
      this.webUrls = new ArrayList<WebUrl>();
    }
    this.webUrls.add(webUrlsItem);
    return this;
  }

   /**
   * The organization&#x27;s web URLs, with one optionally marked as primary.
   * @return webUrls
  **/
  @Schema(description = "The organization's web URLs, with one optionally marked as primary.")
  public List<WebUrl> getWebUrls() {
    return webUrls;
  }

  public void setWebUrls(List<WebUrl> webUrls) {
    this.webUrls = webUrls;
  }

   /**
   * Get xClassName
   * @return xClassName
  **/
  @Schema(description = "")
  public String getXClassName() {
    return xClassName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationContactInformation organizationContactInformation = (OrganizationContactInformation) o;
    return Objects.equals(this.emailAddresses, organizationContactInformation.emailAddresses) &&
        Objects.equals(this.postalAddresses, organizationContactInformation.postalAddresses) &&
        Objects.equals(this.telephones, organizationContactInformation.telephones) &&
        Objects.equals(this.webUrls, organizationContactInformation.webUrls) &&
        Objects.equals(this.xClassName, organizationContactInformation.xClassName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailAddresses, postalAddresses, telephones, webUrls, xClassName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationContactInformation {\n");
    
    sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
    sb.append("    postalAddresses: ").append(toIndentedString(postalAddresses)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("    webUrls: ").append(toIndentedString(webUrls)).append("\n");
    sb.append("    xClassName: ").append(toIndentedString(xClassName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
