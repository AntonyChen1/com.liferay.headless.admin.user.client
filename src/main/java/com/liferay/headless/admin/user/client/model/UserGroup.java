/*
 * Headless Admin User
 * A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.user.client', and version '4.0.49'.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.liferay.headless.admin.user.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * UserGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-04T10:04:24.474623+08:00[Asia/Shanghai]")

public class UserGroup {
  @SerializedName("actions")
  private Map<String, Map<String, String>> actions = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("externalReferenceCode")
  private String externalReferenceCode = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("usersCount")
  private Integer usersCount = null;

  @SerializedName("x-class-name")
  private String xClassName = "com.liferay.headless.admin.user.dto.v1_0.UserGroup";

   /**
   * Get actions
   * @return actions
  **/
  @Schema(description = "")
  public Map<String, Map<String, String>> getActions() {
    return actions;
  }

  public UserGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UserGroup externalReferenceCode(String externalReferenceCode) {
    this.externalReferenceCode = externalReferenceCode;
    return this;
  }

   /**
   * Get externalReferenceCode
   * @return externalReferenceCode
  **/
  @Schema(description = "")
  public String getExternalReferenceCode() {
    return externalReferenceCode;
  }

  public void setExternalReferenceCode(String externalReferenceCode) {
    this.externalReferenceCode = externalReferenceCode;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public UserGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Get usersCount
   * @return usersCount
  **/
  @Schema(description = "")
  public Integer getUsersCount() {
    return usersCount;
  }

   /**
   * Get xClassName
   * @return xClassName
  **/
  @Schema(description = "")
  public String getXClassName() {
    return xClassName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserGroup userGroup = (UserGroup) o;
    return Objects.equals(this.actions, userGroup.actions) &&
        Objects.equals(this.description, userGroup.description) &&
        Objects.equals(this.externalReferenceCode, userGroup.externalReferenceCode) &&
        Objects.equals(this.id, userGroup.id) &&
        Objects.equals(this.name, userGroup.name) &&
        Objects.equals(this.usersCount, userGroup.usersCount) &&
        Objects.equals(this.xClassName, userGroup.xClassName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actions, description, externalReferenceCode, id, name, usersCount, xClassName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserGroup {\n");
    
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    externalReferenceCode: ").append(toIndentedString(externalReferenceCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    usersCount: ").append(toIndentedString(usersCount)).append("\n");
    sb.append("    xClassName: ").append(toIndentedString(xClassName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
