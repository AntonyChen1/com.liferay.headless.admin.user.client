/*
 * Headless Admin User
 * A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.user.client', and version '4.0.49'.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.liferay.headless.admin.user.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Creator
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-04T10:04:24.474623+08:00[Asia/Shanghai]")

public class Creator {
  @SerializedName("additionalName")
  private String additionalName = null;

  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("familyName")
  private String familyName = null;

  @SerializedName("givenName")
  private String givenName = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("profileURL")
  private String profileURL = null;

  @SerializedName("x-class-name")
  private String xClassName = "com.liferay.headless.admin.user.dto.v1_0.Creator";

   /**
   * The user&#x27;s additional name, which can be used as a middle name.
   * @return additionalName
  **/
  @Schema(description = "The user's additional name, which can be used as a middle name.")
  public String getAdditionalName() {
    return additionalName;
  }

   /**
   * The type of the content.
   * @return contentType
  **/
  @Schema(description = "The type of the content.")
  public String getContentType() {
    return contentType;
  }

   /**
   * The user&#x27;s surname (last name).
   * @return familyName
  **/
  @Schema(description = "The user's surname (last name).")
  public String getFamilyName() {
    return familyName;
  }

   /**
   * The user&#x27;s first name.
   * @return givenName
  **/
  @Schema(description = "The user's first name.")
  public String getGivenName() {
    return givenName;
  }

   /**
   * The user&#x27;s ID.
   * @return id
  **/
  @Schema(description = "The user's ID.")
  public Long getId() {
    return id;
  }

   /**
   * A relative URL to the user&#x27;s profile image.
   * @return image
  **/
  @Schema(description = "A relative URL to the user's profile image.")
  public String getImage() {
    return image;
  }

   /**
   * The user&#x27;s full name.
   * @return name
  **/
  @Schema(description = "The user's full name.")
  public String getName() {
    return name;
  }

   /**
   * A relative URL to the user&#x27;s profile.
   * @return profileURL
  **/
  @Schema(description = "A relative URL to the user's profile.")
  public String getProfileURL() {
    return profileURL;
  }

   /**
   * Get xClassName
   * @return xClassName
  **/
  @Schema(description = "")
  public String getXClassName() {
    return xClassName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Creator creator = (Creator) o;
    return Objects.equals(this.additionalName, creator.additionalName) &&
        Objects.equals(this.contentType, creator.contentType) &&
        Objects.equals(this.familyName, creator.familyName) &&
        Objects.equals(this.givenName, creator.givenName) &&
        Objects.equals(this.id, creator.id) &&
        Objects.equals(this.image, creator.image) &&
        Objects.equals(this.name, creator.name) &&
        Objects.equals(this.profileURL, creator.profileURL) &&
        Objects.equals(this.xClassName, creator.xClassName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalName, contentType, familyName, givenName, id, image, name, profileURL, xClassName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Creator {\n");
    
    sb.append("    additionalName: ").append(toIndentedString(additionalName)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    profileURL: ").append(toIndentedString(profileURL)).append("\n");
    sb.append("    xClassName: ").append(toIndentedString(xClassName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
