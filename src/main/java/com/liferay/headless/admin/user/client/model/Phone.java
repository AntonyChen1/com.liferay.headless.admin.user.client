/*
 * Headless Admin User
 * A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.user.client', and version '4.0.49'.
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.liferay.headless.admin.user.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A list of the user&#x27;s phone numbers, with one optionally marked as primary.
 */
@Schema(description = "A list of the user's phone numbers, with one optionally marked as primary.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-03-04T10:04:24.474623+08:00[Asia/Shanghai]")

public class Phone {
  @SerializedName("extension")
  private String extension = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("phoneType")
  private String phoneType = null;

  @SerializedName("primary")
  private Boolean primary = null;

  @SerializedName("x-class-name")
  private String xClassName = "com.liferay.headless.admin.user.dto.v1_0.Phone";

  public Phone extension(String extension) {
    this.extension = extension;
    return this;
  }

   /**
   * The phone number&#x27;s extension.
   * @return extension
  **/
  @Schema(description = "The phone number's extension.")
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }

  public Phone id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The phone number&#x27;s ID.
   * @return id
  **/
  @Schema(description = "The phone number's ID.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Phone phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The phone number without its extension.
   * @return phoneNumber
  **/
  @Schema(description = "The phone number without its extension.")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Phone phoneType(String phoneType) {
    this.phoneType = phoneType;
    return this;
  }

   /**
   * The phone number&#x27;s type.
   * @return phoneType
  **/
  @Schema(description = "The phone number's type.")
  public String getPhoneType() {
    return phoneType;
  }

  public void setPhoneType(String phoneType) {
    this.phoneType = phoneType;
  }

  public Phone primary(Boolean primary) {
    this.primary = primary;
    return this;
  }

   /**
   * A flag that identifies whether this is the main phone number of the user/organization.
   * @return primary
  **/
  @Schema(description = "A flag that identifies whether this is the main phone number of the user/organization.")
  public Boolean isPrimary() {
    return primary;
  }

  public void setPrimary(Boolean primary) {
    this.primary = primary;
  }

   /**
   * Get xClassName
   * @return xClassName
  **/
  @Schema(description = "")
  public String getXClassName() {
    return xClassName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Phone phone = (Phone) o;
    return Objects.equals(this.extension, phone.extension) &&
        Objects.equals(this.id, phone.id) &&
        Objects.equals(this.phoneNumber, phone.phoneNumber) &&
        Objects.equals(this.phoneType, phone.phoneType) &&
        Objects.equals(this.primary, phone.primary) &&
        Objects.equals(this.xClassName, phone.xClassName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extension, id, phoneNumber, phoneType, primary, xClassName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Phone {\n");
    
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneType: ").append(toIndentedString(phoneType)).append("\n");
    sb.append("    primary: ").append(toIndentedString(primary)).append("\n");
    sb.append("    xClassName: ").append(toIndentedString(xClassName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
